{
	"info": {
		"_postman_id": "a49202d2-faa7-4d18-97a8-5f53e5211031",
		"name": "HW_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21683583"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm.response.json();\r",
							"var resp_token = jsonData.token;\r",
							"\r",
							"pm.environment.set(\"token\", resp_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Karamelev",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"    var jsonData = pm.response.json();\r",
							"    // var resp_person = jsonData.person;\r",
							"    var resp_person_u_salary_1_5_year = jsonData.person.u_salary_1_5_year;\r",
							"    var pesp_qa_salary_after_6_months = jsonData.qa_salary_after_6_months;\r",
							"    var resp_qa_salary_after_12_months = jsonData.qa_salary_after_12_months;\r",
							"    var req_body = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"console.log(resp_person_u_salary_1_5_year)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const schema =\r",
							"{\r",
							"//   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"person\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"u_age\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"u_name\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"u_salary_1_5_year\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"u_age\",\r",
							"        \"u_name\",\r",
							"        \"u_salary_1_5_year\"\r",
							"      ]\r",
							"    },\r",
							"    \"qa_salary_after_12_months\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"qa_salary_after_6_months\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"start_qa_salary\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"person\",\r",
							"    \"qa_salary_after_12_months\",\r",
							"    \"qa_salary_after_6_months\",\r",
							"    \"start_qa_salary\"\r",
							"  ]\r",
							"}\r",
							"pm.test (\"Validating schema\", ()=> {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test multiplication factors salary*2\", function () {\r",
							"     pm.expect(+pesp_qa_salary_after_6_months).to.eql(+req_body.salary*2);\r",
							"     console.log(+pesp_qa_salary_after_6_months,+req_body.salary*2)\r",
							"     });\r",
							"pm.test(\"Your test multiplication factors salary*2.9\", function () {\r",
							"     pm.expect(+resp_qa_salary_after_12_months).to.eql(+req_body.salary*2.9);\r",
							"     console.log(+resp_qa_salary_after_12_months,+req_body.salary*2.9)\r",
							"     });  \r",
							"pm.test(\"Your test multiplication factors salary*4\", function () {\r",
							"     pm.expect(resp_person_u_salary_1_5_year).to.eql(req_body.salary*4);\r",
							"     console.log(+resp_person_u_salary_1_5_year,+req_body.salary*4)\r",
							"});\r",
							"\r",
							"pm.environment.set(\"salary\", resp_person_u_salary_1_5_year);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": 51,\r\n    \"salary\":1000,\r\n    \"name\": \"Alexandr\",\r\n    \"auth_token\":\"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "new_date",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var resp_salary = jsonData.salary;\r",
							"var req = request.data;\r",
							"const schema = \r",
							"{\r",
							"//   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"name\",\r",
							"    \"salary\"\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test (\"Validating schema\", ()=> {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"pm.test(\"Your test multiplication factor*2 \", function () {\r",
							"    pm.expect(+resp_salary[1]).to.eql(+req.salary*2);\r",
							"       console.log(+resp_salary[1],+req.salary*2)\r",
							"});\r",
							"pm.test(\"Your test multiplication factor*3 \", function () {\r",
							"    pm.expect(+resp_salary[2]).to.eql(+req.salary*3);\r",
							"       console.log(+resp_salary[2],+req.salary*3)\r",
							"});\r",
							"pm.test(\"Your test checking that the second element is greater than zero \", function () {\r",
							"    pm.expect(+resp_salary[0]).to.be.below(+resp_salary[2]);\r",
							"});\r",
							"pm.test(\"Your testchecking that the second element is greater than the first \", function () {\r",
							"    pm.expect(+resp_salary[1]).to.be.below(+resp_salary[2]);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "51",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Aleksandr",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"    var jsonData = pm.response.json();\r",
							"    var req = request.data;\r",
							"\r",
							"var resp_daily_food = jsonData.daily_food;\r",
							"var resp_daily_sleep = jsonData.daily_sleep;\r",
							"var req_weight = +req.weight;\r",
							"\r",
							"console.log(resp_daily_food,resp_daily_sleep,req_weight)\r",
							"\r",
							"const schema =\r",
							"{\r",
							"//   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"daily_food\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"daily_sleep\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"daily_food\",\r",
							"    \"daily_sleep\",\r",
							"    \"name\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test (\"Validating schema\", function (){\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"pm.test(\"Your test weight*0.012\", function () {\r",
							"    pm.expect(resp_daily_food).to.eql(req_weight*0.012);\r",
							"});\r",
							"pm.test(\"Your test weight*2.5\", function () {\r",
							"    pm.expect(resp_daily_sleep).to.eql(req_weight*2.5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "51",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "80",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Aleksandr",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/test_pet_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp = pm.response.json();\r",
							"var req = request.data;\r",
							"// var req_name = pm.environment.set(\"name\",name);\r",
							"// var resp_name = jsonData.name;\r",
							"var resp_age = resp.age;\r",
							"var resp_name =  resp.name;\r",
							"var env_name = pm.environment.get(\"name\");\r",
							"\r",
							"\r",
							"\r",
							"// console.log(req_name)\r",
							"const schema =\r",
							"{\r",
							"//   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"family\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"children\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"u_salary_1_5_year\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"children\",\r",
							"        \"u_salary_1_5_year\"\r",
							"      ]\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"family\",\r",
							"    \"name\",\r",
							"    \"salary\"\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test (\"Validating schema\", ()=> {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(resp_name).to.eql(env_name);\r",
							"    console.log(resp_name,env_name)\r",
							"});\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(resp_age).to.eql(req.age);\r",
							"    console.log(resp_age,req.age)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{salary}}",
							"contentType": "{{salary}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "51",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/get_test_user",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currensy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let respons_currency = pm.response.json();\r",
							"let token = pm. environment.get(\"token\");\r",
							"\r",
							"\r",
							"     for (currency in respons_currency) {\r",
							"         let cur_id = respons_currency[currency].Cur_ID\r",
							"         let req_currensy_post = {\r",
							"               url : \"http://54.157.99.22:80/curr_byn\",\r",
							"               method: \"POST\",\r",
							"               body : {\r",
							"                     mode: \"urlencoded\",\r",
							"                            urlencoded: [\r",
							"                {key:\"auth_token\", value: token},\r",
							"                {key:\"curr_code\", value: cur_id}\r",
							"                      ]\r",
							"                 }\r",
							"            }\r",
							"\r",
							"          pm.sendRequest(req_currensy_post, function (err,response){\r",
							"            let resp_curr_by = response.json()\r",
							"            if (response.code === 500) {\r",
							"                console.log(err)\r",
							"            }\r",
							"                 if (response.code === 200 && Object.has(resp_curr_by,\"Cur_OfficialRate\")){\r",
							"                    console.log(resp_curr_by)\r",
							"                 }\r",
							"            })\r",
							"    \r",
							"    }\r",
							"// pm.test(\"Your test name\", function () {\r",
							"//        pm.expect(resp).to.eql();\r",
							"// });\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80/currency",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"currency"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "currensy Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							" var resp = pm.response.json();\r",
							" var resp_random = Math.floor(Math.random() * (resp.length));\r",
							" console.log(resp_random)\r",
							"    pm.environment.set(\"curr_code\",resp_random)\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80/currency",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"currency"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = \r",
							"{\r",
							"//   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"Cur_Abbreviation\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"Cur_ID\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"Cur_Name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"Cur_OfficialRate\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"Cur_Scale\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"Date\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"Cur_Abbreviation\",\r",
							"    \"Cur_ID\",\r",
							"    \"Cur_Name\",\r",
							"    \"Cur_OfficialRate\",\r",
							"    \"Cur_Scale\",\r",
							"    \"Date\"\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test (\"Validating schema\", ()=> {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest(\r",
							"    {\r",
							"    url:\"http://54.157.99.22:80/curr_byn\", \r",
							"    method: \"POST\",\r",
							"    body:{\r",
							"        mode:\"formdata\",\r",
							"        formdata:[\r",
							"        {key:\"auth_token\",value:pm.environment.get(\"token\"),disabled: false},\r",
							"        {key:\"curr_code\",value: pm.environment.get(\"Curr_code\"),disabled:false}\r",
							"        ]\r",
							"    }\r",
							"})\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{curr_code}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80/curr_byn",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}